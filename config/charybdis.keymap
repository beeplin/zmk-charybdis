#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <31 32>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <32 33>;
        };

        scroll {
            bindings = <&mo 4>;
            key-positions = <31 32 33>;
        };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        d_dollar_l0: dollar_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &to 0>, <&macro_press>;

            label = "DOLLAR_L0";
        };

        d_grave_l0: grave_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &to 0>, <&macro_press>;

            label = "GRAVE_L0";
        };

        to_dd: to_deadstate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 7>, <&macro_press>;

            label = "TO_DEADSTATE";
        };

        dollar_0: n_dollar_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR &to 0>, <&macro_press>;

            label = "N_DOLLAR_0";
        };

        grave_0: grave_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &to 0>, <&macro_press>;

            label = "GRAVE_0";
        };

        d_conon_equal_l0: d_conon_equal_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Q) &kp N6 &to 0>;
            label = "D_CONON_EQUAL_L0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1          &kp N2          &kp N3       &kp N4            &kp N5    &kp N6     &kp N7         &kp N8               &kp N9          &kp N0              &kp MINUS
&kp TAB         &kp Q           &kp W           &kp E        &kp R             &kp T     &kp Y      &kp U          &kp I                &kp O           &kp P               &kp LEFT_BRACKET
&to_dd          &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G     &kp H      &mt RSHIFT J   &mt RIGHT_CONTROL K  &mt LEFT_ALT L  &mt RIGHT_GUI SEMI  &kp APOS
&kp LEFT_SHIFT  &lt 3 Z         &lt 5 X         &kp C        &kp V             &kp B     &kp N      &kp M          &kp COMMA            &kp PERIOD      &lt 3 SLASH         &kp RSHFT
                                                &kp LGUI     &kp SPACE         &mo 4     &kp ENTER  &kp BACKSPACE
                                                             &kp LEFT_ALT      &mo 1     &mo 2
            >;
        };

        layer_1 {
            bindings = <
&kp LG(GRAVE)  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH        &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&none          &none            &none         &none           &none       &none          &none      &kp MINUS       &kp EQUAL     &kp LBKT              &kp RBKT               &kp PIPE
&none          &kp LEFT         &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT   &none          &none      &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
&none          &none            &none         &none           &none       &none          &none      &none           &none         &none                 &mkp LCLK              &mkp RCLK
                                              &none           &none       &trans         &none      &trans
                                                              &none       &none          &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F11     &kp F1    &kp F2        &kp F3          &kp F4           &kp F5    &kp F6  &kp F7           &kp F8             &kp F9        &kp F10        &kp F12
&kp C_NEXT  &none     &none         &kp KP_MINUS    &kp KP_PLUS      &none     &none   &none            &none              &none         &none          &kp C_VOL_UP
&kp C_PLAY  &kp LEFT  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none     &none   &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT  &kp RIGHT_WIN  &kp K_MUTE
&kp C_PREV  &none     &none         &none           &none            &none     &none   &none            &none              &none         &none          &kp C_VOL_DN
                                    &trans          &trans           &none     &trans  &none
                                                    &trans           &trans    &none
            >;
        };

        Mouse {
            bindings = <
&none  &none  &none  &none      &none      &none          &none         &none         &none         &none  &none  &none
&none  &none  &none  &none      &none      &bootloader    &bootloader   &bt BT_CLR    &none         &none  &none  &none
&none  &none  &none  &none      &none      &none          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &none
&none  &none  &none  &none      &none      &none          &none         &none         &none         &none  &none  &none
                     &mkp RCLK  &mkp LCLK  &mkp MCLK      &none         &none
                                &none      &mkp LCLK      &none
            >;
        };

        Scroll {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        Snipe {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        TransBackTo0 {
            bindings = <
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &to 0  &to 0  &to 0  &to 0  &to 0  &to 0
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &to 0  &to 0  &to 0  &to 0  &to 0  &to 0
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &to 0  &to 0  &to 0  &to 0  &to 0  &to 0
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &to 0  &to 0  &to 0  &to 0  &to 0  &to 0
                     &to 0  &to 0  &to 0    &to 0  &to 0
                            &to 0  &to 0    &to 0
            >;
        };

        Dvorak_DeadState {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans     &trans  &trans        &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans    &d_grave_l0        &trans     &trans  &d_dollar_l0  &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp N1             &kp LS(Z)  &trans  &trans        &d_conon_equal_l0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(BACKSLASH)  &trans     &trans  &trans        &trans             &trans
                        &trans  &trans  &trans    &trans             &trans
                                &trans  &mo 4     &trans
            >;
        };

        Normal_DeadState {
            bindings = <
&trans  &trans  &trans     &trans  &trans  &trans    &trans    &trans  &trans  &trans     &trans  &trans
&trans  &trans  &kp TILDE  &trans  &trans  &trans    &grave_0  &trans  &trans  &dollar_0  &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans    &kp AMPS  &trans  &trans  &trans     &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans    &kp PIPE  &trans  &trans  &trans     &trans  &trans
                           &trans  &trans  &trans    &trans    &trans
                                   &trans  &trans    &trans
            >;
        };

        DeadStatePreview {
            bindings = <
&kp DOLLAR  &kp AMPS  &kp N7     &kp N5  &kp N3       &kp N1    &kp N9     &kp N0             &kp N2     &kp N4      &kp N6  &kp N8
&kp TAB     &trans    &kp TILDE  &trans  &trans       &trans    &kp GRAVE  &kp CARET          &kp COLON  &kp DOLLAR  &trans  &trans
&trans      &trans    &trans     &trans  &kp PERCENT  &trans    &kp AMPS   &kp DOUBLE_QUOTES  &trans     &trans      &trans  &trans
&trans      &trans    &trans     &trans  &trans       &trans    &kp PIPE   &kp SQT            &trans     &trans      &trans  &trans
                                 &trans  &kp COMMA    &trans    &trans     &trans
                                         &trans       &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        dvorak_deadstate {
            if-layers = <7>;
            then-layer = <7>;
        };
    };
};
