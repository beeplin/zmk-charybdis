#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <250>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_left_click {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };

        combo_right_click {
            bindings = <&mkp RCLK>;
            key-positions = <20 21>;
        };

        combo_middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <19 20 21>;
        };

        combo_lefe {
            bindings = <&kp LEFT>;
            key-positions = <43 44>;
        };

        combo_right {
            bindings = <&kp RIGHT>;
            key-positions = <44 45>;
        };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        d_dollar_l0: dollar_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &to 0>, <&macro_press>;

            label = "DOLLAR_L0";
        };

        d_grave_l0: grave_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &to 0>, <&macro_press>;

            label = "GRAVE_L0";
        };

        n_dollar_0: n_dollar_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR &to 0>, <&macro_press>;

            label = "N_DOLLAR_0";
        };

        n_grave_0: grave_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &to 0>, <&macro_press>;

            label = "GRAVE_0";
        };

        n_amps_l0: amps_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &to 0>;
            label = "AMPS_L0";
        };

        n_pipe_l0: pipe_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &to 0>;
            label = "PIPE_L0";
        };

        n_tilde_l0: n_tilde_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE &to 0>;
            label = "N_TILDE_L0";
        };

        d_amps_l0: d_amps_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &to 0>;
            label = "D_AMPS_L0";
        };

        d_dqt_l0: d_double_quotes_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Z) &to 0>;
            label = "D_DOUBLE_QUOTES_L0";
        };

        n_dqt_l0: n_double_quotes_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SQT) &to 0>;
            label = "N_DOUBLE_QUOTES_L0";
        };

        n_backslash_l0: n_backslash_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH &to 0>;
            label = "N_BACKSLASH_L0";
        };

        n_space_l0: n_space_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &to 0>;
            label = "N_SPACE_L0";
        };

        n_caret_l0: n_caret_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &to 0>;
            label = "N_CARET_L0";
        };

        d_caret_l0: d_caret_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RBKT) &to 0>;
            label = "D_CARET_L0";
        };

        n_colon_l0: n_colon_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &to 0>;
            label = "N_COLON_L0";
        };

        d_colon_l0: d_colon_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Q) &to 0>;
            label = "D_COLON_L0";
        };

        n_percent_l0: n_percent_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PERCENT &to 0>;
            label = "N_PERCENT_L0";
        };

        d_percent_l0: d_percent_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N1) &to 0>;
            label = "D_PERCENT_L0";
        };

        n_esc_l0: n_esc_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &to 0>;
            label = "N_ESC_L0";
        };

        d_hash_l0: d_equal_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &to 0>;
            label = "D_EQUAL_L0";
        };

        n_hash_l0: n_equal_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HASH &to 0>;
            label = "N_EQUAL_L0";
        };

        n_at_l0: n_at_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AT &to 0>;
            label = "N_AT_L0";
        };

        d_at_l0: d_at_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &to 0>;
            label = "D_AT_L0";
        };

        n_slash_l0: n_slash_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_DIVIDE &to 0>;
            label = "N_SLASH_L0";
        };

        n_lbkt_l0: n_lbkt_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &to 0>;
            label = "N_LBKT_L0";
        };

        n_rbkt_l0: n_rbkt_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RBKT &to 0>;
            label = "N_RBKT_L0";
        };

        n_lbrc_l0: n_brc_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &to 0>;
            label = "N_BRC_L0";
        };

        n_rbrc_l0: n_rbrc_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RBRC &to 0>;
            label = "N_RBRC_L0";
        };

        n_lpar_l0: n_lpar_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &to 0>;
            label = "N_LPAR_L0";
        };

        n_rpar_l0: n_rpar_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RPAR &to 0>;
            label = "N_RPAR_L0";
        };

        n_plus_l0: n_plus_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_PLUS &to 0>;
            label = "N_PLUS_L0";
        };

        n_minus_l0: n_mine_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_MINUS &to 0>;
            label = "N_MINE_L0";
        };

        n_star_l0: n_star_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_MULTIPLY &to 0>;
            label = "N_STAR_L0";
        };

        d_lbkt_l0: d_lpkt_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &to 0>;
            label = "D_LPKT_L0";
        };

        d_rbkt_l0: d_rpkt_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &to 0>;
            label = "D_RPKT_L0";
        };

        d_lbrc_l0: d_lbrc_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &to 0>;
            label = "D_LBRC_L0";
        };

        d_rbrc_l0: d_rbrc_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N4 &to 0>;
            label = "D_RBRC_L0";
        };

        d_lpar_l0: d_lpar_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &to 0>;
            label = "D_LPAR_L0";
        };

        d_rpar_l0: d_rpar_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N7 &to 0>;
            label = "D_RPAR_L0";
        };

        n_excl_l0: n_excl_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &to 0>;
            label = "N_EXCL_L0";
        };

        d_excl_l0: d_excl_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &to 0>;
            label = "D_EXCL_L0";
        };

        n_equl_l0: n_equl_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &to 0>;
            label = "N_EQUL_L0";
        };

        d_equl_l0: d_equl_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N6 &to 0>;
            label = "D_EQUL_L0";
        };

        n_under_l0: n_under_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER &to 0>;
            label = "N_UNDER_L0";
        };

        d_under_l0: d_under_l0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SQT) &to 0>;
            label = "D_UNDER_L0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC         &kp N1      &kp N2      &kp N3        &kp N4            &kp N5    &kp N6     &kp N7             &kp N8               &kp N9          &kp N0              &kp MINUS
&kp TAB         &kp Q       &kp W       &kp E         &kp R             &kp T     &kp Y      &kp U              &kp I                &kp O           &kp P               &kp LEFT_BRACKET
&kp LCTRL       &mt LGUI A  &mt LALT S  &mt LCTRL D   &mt LEFT_SHIFT F  &kp G     &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt LEFT_ALT L  &mt RIGHT_GUI SEMI  &kp APOS
&kp LEFT_SHIFT  &lt 3 Z     &lt 5 X     &kp C         &kp V             &kp B     &kp N      &kp M              &kp COMMA            &kp PERIOD      &lt 3 SLASH         &mo 4
                                        &kp LEFT_GUI  &kp SPACE         &to 6     &kp ENTER  &kp BACKSPACE
                                                      &kp LEFT_ALT      &mo 1     &to 2
            >;
        };

        layer_1 {
            bindings = <
&kp LG(GRAVE)  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH        &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&none          &none            &none         &none           &none       &none          &none      &kp MINUS       &kp EQUAL     &kp LBKT              &kp RBKT               &kp PIPE
&none          &kp LEFT         &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT   &none          &none      &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
&none          &none            &none         &none           &none       &none          &none      &none           &none         &none                 &mkp LCLK              &mkp RCLK
                                              &none           &none       &trans         &trans     &trans
                                                              &none       &none          &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F11           &kp F1    &kp F2        &kp F3          &kp F4           &kp F5    &kp F6  &kp F7           &kp F8             &kp F9        &kp F10        &kp F12
&kp C_PREV        &none     &none         &kp KP_MINUS    &kp KP_PLUS      &none     &none   &none            &none              &none         &none          &kp C_VOL_UP
&kp C_PLAY_PAUSE  &kp LEFT  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none     &none   &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp LEFT_ALT  &kp RIGHT_WIN  &kp C_MUTE
&kp LS(C_NEXT)    &none     &none         &none           &none            &none     &none   &none            &none              &none         &none          &kp C_VOL_DN
                                          &to 0           &to 0            &to 0     &trans  &none
                                                          &trans           &trans    &to 9
            >;
        };

        Mouse {
            bindings = <
&none  &none  &none  &none      &none      &none          &none         &none         &none         &none         &none         &none
&none  &none  &none  &none      &none      &bootloader    &bootloader   &bt BT_CLR    &none         &none         &none         &none
&none  &none  &none  &none      &none      &none          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none  &none  &none      &none      &none          &none         &none         &none         &none         &none         &none
                     &mkp RCLK  &mkp LCLK  &mkp MCLK      &none         &none
                                &none      &mkp LCLK      &none
            >;
        };

        Scroll {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        Snipe {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };

        Dvorak_DeadState {
            bindings = <
&to 0      &none        &none       &none        &none          &none          &none        &none        &none        &none         &none            &none
&n_esc_l0  &n_tilde_l0  &n_plus_l0  &n_minus_l0  &d_hash_l0     &d_excl_l0     &d_grave_l0  &d_caret_l0  &d_colon_l0  &d_dollar_l0  &n_backslash_l0  &n_backslash_l0
&to 0      &d_lbkt_l0   &d_lbrc_l0  &d_lpar_l0   &d_percent_l0  &d_equl_l0     &d_amps_l0   &d_dqt_l0    &d_at_l0     &n_star_l0    &n_slash_l0      &none
&none      &d_rbkt_l0   &d_rbrc_l0  &n_rpar_l0   &none          &n_under_l0    &n_pipe_l0   &none        &none        &none         &none            &mo 4
                                    &to 0        &n_space_l0    &to 7          &to 0        &to 0
                                                 &none          &none          &to 0
            >;
        };

        Normal_DeadState {
            bindings = <
&to 0      &to 0        &to 0       &to 0        &none          &none          &none       &none        &none        &none        &none            &none
&n_esc_l0  &n_tilde_l0  &n_plus_l0  &n_minus_l0  &n_hash_l0     &n_excl_l0     &n_grave_0  &n_caret_l0  &n_colon_l0  &n_dollar_0  &n_backslash_l0  &n_backslash_l0
&none      &n_lbkt_l0   &n_lbrc_l0  &n_lpar_l0   &n_percent_l0  &n_equl_l0     &n_amps_l0  &n_dqt_l0    &n_at_l0     &n_star_l0   &n_slash_l0      &none
&none      &n_rbkt_l0   &n_rbrc_l0  &n_rpar_l0   &none          &d_under_l0    &n_pipe_l0  &none        &none        &none        &none            &mo 4
                                    &to 0        &n_space_l0    &to 0          &to 0       &none
                                                 &to 0          &none          &none
            >;
        };

        DeadStatePreview {
            bindings = <
&to 0    &kp AMPS   &kp N7    &kp N5     &kp N3       &kp N1       &kp N9     &kp N0             &kp N2     &kp N4      &kp N6         &kp N8
&kp ESC  &kp TILDE  &kp PLUS  &kp MINUS  &kp HASH     &kp EXCL     &kp GRAVE  &kp CARET          &kp COLON  &kp DOLLAR  &kp BACKSLASH  &kp BACKSLASH
&none    &kp LBKT   &kp LBRC  &kp LPAR   &kp PERCENT  &kp EQUAL    &kp AMPS   &kp DOUBLE_QUOTES  &kp AT     &kp STAR    &kp SLASH      &none
&none    &kp RBKT   &kp RBRC  &kp RPAR   &none        &kp UNDER    &kp PIPE   &kp SQT            &none      &none       &none          &mo 4
                              &to 0      &kp SPACE    &to 0        &none      &none
                                         &none        &none        &none
            >;
        };

        Num {
            bindings = <
&none  &none    &none             &none              &none            &none          &none         &none      &none      &none      &none          &none
&none  &kp ESC  &kp C_PLAY_PAUSE  &kp C_PREV         &kp C_NEXT       &kp UNDER      &kp KP_MINUS  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp BACKSPACE  &none
&none  &kp TAB  &none             &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp KP_PLUS    &kp KP_EQUAL  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp ENTER      &none
&none  &none    &none             &none              &none            &kp KP_DOT     &kp KP_N0     &kp KP_N1  &kp KP_N2  &kp KP_N3  &to 0          &none
                                  &to 0              &kp LEFT_GUI     &to 0          &kp LEFT_ALT  &none
                                                     &none            &none          &to 2
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
